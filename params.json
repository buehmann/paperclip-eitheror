{
  "name": "Paperclip-eitheror",
  "tagline": "A Paperclip Storage with a fallback option.",
  "body": "# Paperclip::Eitheror\r\n[![Build Status](https://travis-ci.org/powerhome/paperclip-eitheror.svg?branch=master)](https://travis-ci.org/powerhome/paperclip-eitheror)\r\n\r\nA [Paperclip](https://github.com/thoughtbot/paperclip/) Storage which supports a secondary (called 'or') storage as a fallback while using the primary one (called 'either').\r\n\r\nThe purpose of this gem is to help us while migrating our assets to a different place, a better place <3\r\n\r\nDependency versions are locked to the current versions we have running.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'paperclip-eitheror'\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install paperclip-eitheror\r\n\r\n## Usage\r\n\r\nGiven you have the gem installed and some model, you need to configure your attachment with `storage: :eitheror`, and set up the primary (`either`) and the secondary/fallback (`or`) storages:\r\n\r\n```ruby\r\nhas_attached_file :avatar, {\r\n  storage: :eitheror,\r\n  either: {\r\n    storage: :fog\r\n  },\r\n  or: {\r\n    storage: :filesystem\r\n  }\r\n}\r\n```\r\n\r\nYou can use specific configuration by passing them on one of the storages config. For instance:\r\n\r\n```ruby\r\nhas_attached_file :avatar, {\r\n  storage: :eitheror,\r\n  either: {\r\n    storage: :fog,\r\n    path: ':attachment/:id/:style/:filename',\r\n    url: ':attachment/:id/:style/:filename'\r\n  },\r\n  or: {\r\n    storage: :filesystem,\r\n    path: ':rails_root/public/attachments/:class/:attachment/:style/:filename'\r\n  }\r\n}\r\n```\r\n\r\nThe configuration for each storage inherits whatever attributes are defined at the configuration top level config, and existing attributes may be overridden with storage specific values. For example:\r\n\r\n```ruby\r\nhas_attached_file :avatar, {\r\n  storage: :eitheror,\r\n  url: '/api/v1/attachments/:attachment/:id/:style',\r\n  path: ':rails_root/public/attachments/:class/:attachment/:style/:filename',\r\n  either: {\r\n    storage: :fog,\r\n    path: ':attachment/:id/:style/:filename',\r\n    url: ':attachment/:id/:style/:filename'\r\n  },\r\n  or: {\r\n    storage: :filesystem,\r\n  }\r\n}\r\n```\r\n\r\nIn the example above, the storage **or** will inherit the attributes `path` and `url` from the base configuration, while `either` will provide its own `path` and `url` attributes. The following configuration is equivalent:\r\n\r\n```ruby\r\nhas_attached_file :avatar, {\r\n  storage: :eitheror,\r\n  either: {\r\n    storage: :fog,\r\n    path: ':attachment/:id/:style/:filename',\r\n    url: ':attachment/:id/:style/:filename'\r\n  },\r\n  or: {\r\n    storage: :filesystem,\r\n    url: '/api/v1/attachments/:attachment/:id/:style',\r\n    path: ':rails_root/public/attachments/:class/:attachment/:style/:filename',\r\n  }\r\n}\r\n```\r\n\r\nThat is particularly useful when globally configuring `paparclip-eitheror`.\r\n\r\n# Global configuration\r\n\r\nOn large codebases it might become very tedious and error prone to chase down all paperclip usages and adapt their configuration to use `paperclip-eitheror`. An alternative is to configure `paperclip` default options to use `paperclip-eitheror` as the default storage.\r\n\r\n```ruby\r\n# config/initializers/paperclip.rb\r\n\r\nPaperclip::Attachment.default_options[:storage] = :eitheror\r\nPaperclip::Attachment.default_options[:either] = {\r\n  storage: :fog,\r\n  path: ':attachment/:id/:style/:filename',\r\n  url: ':attachment/:id/:style/:filename',\r\n}\r\n\r\nPaperclip::Attachment.default_options[:or] = {\r\n  storage: :filesystem,\r\n}\r\n```\r\n\r\nSince storages inherit configuration from the base config, you would not have to change any of your existing models and in this case the **or** storage would inherit the configuration on your models acting as your existing storage.\r\n\r\n## Development\r\n\r\nAfter checking out the repo, run `bundle install` to install dependencies. Then, run `rake spec` to run the tests.\r\n\r\n## Contributing\r\n\r\nBug reports and pull requests are welcome on GitHub at https://github.com/[USERNAME]/paperclip-eitheror. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the [Contributor Covenant](http://contributor-covenant.org) code of conduct.\r\n\r\n\r\n## License\r\n\r\nThe gem is available as open source under the terms of the [MIT License](http://opensource.org/licenses/MIT).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}